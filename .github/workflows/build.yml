name: Build and Test Data API

on:
    push:
        branches:
            - main
        paths-ignore:
            - 'docs/**'
            - '.devcontainer/**'
            - '.vscode/**'
            - '.github/**'
            - 'schemas/**'
            - '**.md'
            - 'LICENSE'
            - '.gitignore'
            - 'CODEOWNERS'
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest

        strategy:
            matrix:
                goarch: [amd64, arm64] # Architektur-Matrix f√ºr amd64 und arm64

        steps:
            # Checkout the repository
            - name: Checkout code
              uses: actions/checkout@v4

            # Set up Go environment
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.24 # Set your desired Go version

            # Cache Go modules
            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-${{ matrix.goarch }}-

            # Install go-junit-report
            - name: Install go-junit-report
              run: go install github.com/jstemmer/go-junit-report@latest

            # Build the application
            - name: Build server
              run: make build
              env:
                  GOARCH: ${{ matrix.goarch }}

            # Upload test results to GitHub Actions summary
            - name: Publish Test Report
              uses: mikepenz/action-junit-report@v5
              if: success() || failure()
              with:
                  report_paths: 'test-results.xml'

            # Upload test results
            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  name: server-${{ matrix.goarch }}
                  path: bin/server-${{ matrix.goarch }}

            # Archive vendor directory
            - name: Archive vendor directory
              run: |
                  mkdir -p vendor
                  cp -r vendor/* vendor/
                  tar -czf vendor-${{ matrix.goarch }}.tar.gz vendor

            # Upload test results
            - name: Upload vendor directory
              uses: actions/upload-artifact@v4
              with:
                  name: vendor-${{ matrix.goarch }}
                  path: vendor-${{ matrix.goarch }}.tar.gz

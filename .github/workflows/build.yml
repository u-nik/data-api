name: Build and Test Data API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goarch: [amd64, arm64] # Architektur-Matrix f√ºr amd64 und arm64

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20 # Set your desired Go version

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.goarch }}-

      # Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Run tests
      - name: Run tests
        run: GOARCH=${{ matrix.goarch }} go test ./... -v

      # Build the application
      - name: Build server
        run: GOARCH=${{ matrix.goarch }} go build -o bin/server-${{ matrix.goarch }} ./cmd/server

      # Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: server-${{ matrix.goarch }}
          path: bin/server-${{ matrix.goarch }}
